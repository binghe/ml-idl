
(**********************************************************************
 *
 *  This file was automatically generated by ml-fred
 *  (Fri May  4 11:10:31 2001)
 *
 **********************************************************************)

structure IdlParseTree : Idl_PARSE_TREE_SIG = struct
 datatype start = PT of (top_level) list
 and top_level = Import of (string) list
 | TopDecl of declaration
 | StructName of string
 | SigName of string
 | CLibName of string
 | CLibVersion of string
 | CLibDate of string
 | CppQuote of string
 and declaration = Type of ((type_attribute) list) option * type_spec * (declarator) list
 | Const of const_type_spec * Atom.atom * const_exp
 | Tagged of tagged_declarator
 | Operation of ((operation_attribute) list) option * simple_type_spec * Atom.atom * param_declarators
 and const_type_spec = CT_Integer of primitive_integer_type
 | CT_Char
 | CT_Bool
 | CT_VoidPtr of string
 | CT_CharPtr of string
 and const_exp = CE_Integer of integer_const_exp
 | CE_String of string
 | CE_True
 | CE_False
 | CE_Null
 | CE_Id of Atom.atom
 and integer_const_exp = CE_Int of Int32.int
 | CE_Word of Word32.word
 and type_spec = TS_Simple of simple_type_spec
 | TS_Constructed of constructed_type_spec
 and simple_type_spec = Float
 | Double
 | Integer of integer_type
 | Character of char_type
 | Bool
 | Byte
 | Void
 | Handle
 | ErrorStatus
 | IsoLatin1
 | IsoMulti
 | IsoUcs
 | TS_Id of Atom.atom
 | SmlValue
 and declarator = Decl of (string) list * direct_declarator
 and direct_declarator = D_Id of Atom.atom
 | D_PId of Atom.atom
 | D_Array of array_declarator
 | D_Function of function_declarator
 and tagged_declarator = TG_Struct of tagged_struct_declarator
 | TG_Union of tagged_union_declarator
 and integer_type = PrimitiveInteger of primitive_integer_type
 | HInt
 | HUInt
 | UHInt
 and primitive_integer_type = Signed of signed_integer
 | Unsigned of unsigned_integer
 | SmlInt
 | SmlWord
 and signed_integer = Long
 | Short
 | Small
 | Int
 and unsigned_integer = ULong
 | UShort
 | USmall
 | UInt
 | LongU
 | ShortU
 | SmallU
 and char_type = UChar
 | Char
 | UWChar
 | WChar
 and constructed_type_spec = Struct of (member) list
 | Union of union_type
 | Enum of (identifier) list
 | TaggedD of tagged_declarator
 and tagged_struct_declarator = S_Tag of Atom.atom
 | S_TagBody of Atom.atom * (member) list
 and member = Field of ((field_attribute) list) option * type_spec * (declarator) list
 and tagged_union_declarator = U_Tag of Atom.atom
 | U_TagBody of tagged_union
 and union_type = EUnion of switch_type_spec * Atom.atom * (Atom.atom) option * union_body
 | NEUnion of union_body_ne
 and switch_type_spec = SW_Integer of primitive_integer_type
 | SW_Char of char_type
 | SW_Bool
 | SW_Id of Atom.atom
 and tagged_union = TaggedEUnion of Atom.atom * switch_type_spec * Atom.atom * (Atom.atom) option * union_body
 | TaggedNEUnion of Atom.atom * union_body_ne
 and union_body = Body of (union_case) list
 and union_body_ne = BodyNE of (union_case_ne) list
 and union_case = UnionCase of (const_exp) list * union_arm
 | DefaultCase of union_arm
 and union_case_ne = UnionCaseNE of (const_exp) list * union_arm
 | DefaultCaseNE of union_arm
 and union_arm = UnionArm of (member) option
 and union_type_switch_attr = A_SwitchType of switch_type_spec
 and union_instance_switch_attr = A_SwitchIs of attr_var
 and identifier = IdValue of Atom.atom * integer_const_exp
 | Id of Atom.atom
 and array_declarator = ArrayOne of direct_declarator * (array_bound) option
 | ArrayTwo of direct_declarator * array_bound * array_bound
 and array_bound = BoundAst of string
 | BoundInt of integer_const_exp
 | BoundId of Atom.atom
 and param_declarators = Empty
 | EmptyVoid
 | Params of (param_declarator) list
 and param_declarator = Param of (param_attribute) list * type_spec * declarator
 and function_declarator = Function of direct_declarator * param_declarators
 and param_attribute = A_In
 | A_Out
 | A_ParamField of field_attribute
 and type_attribute = A_TransmitAs of simple_type_spec
 | A_Handle
 | A_TypeUsage of usage_attribute
 | A_TypeUnion of union_type_switch_attr
 | A_TypePtr of ptr_attribute
 | A_Exclude
 | A_Abstract
 and usage_attribute = A_String
 | A_ContextHandle
 | A_SmlType of string
 and field_attribute = A_FirstIs of (attr_var) list
 | A_LastIs of (attr_var) list
 | A_LengthIs of (attr_var) list
 | A_MinIs of (attr_var) list
 | A_MaxIs of (attr_var) list
 | A_SizeIs of (attr_var) list
 | A_FieldUsage of usage_attribute
 | A_FieldUnion of union_instance_switch_attr
 | A_Ignore
 | A_FieldPtr of ptr_attribute
 and attr_var = VarPtr of string * Atom.atom
 | Var of Atom.atom
 and ptr_attribute = A_Ref
 | A_Unique
 | A_Ptr
 and operation_attribute = A_Idempotent
 | A_Broadcast
 | A_Maybe
 | A_ReflectDeletions
 | A_OperationUsage of usage_attribute
 | A_OperationPtr of ptr_attribute
 | A_SmlContext
 | A_Pre of string
 | A_Post of string
 | A_Call of string
end

